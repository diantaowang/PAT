PAT 1067. Sort with Swap(0,*) (25)

解题思路:

(1). n 个数据只要有 n-1 个数字在自己的位置上, 则说明 n 个数据已经排好了, 用变量 finish_num 记录

     已经回到正确位置上的数字的个数. 当 finish_num >= n - 1 时, 跳出循环.
     
(2). next[] 数组保存位置信息, 例如 next[m] = k, 表明第(k + 1)个输入数据为m.

     next[0] != 0 则表明 0 要与 next[0] 交换, finish_num + 1, 即:
     
     finish_num++;
     
     int id = next[0];
     
     finish[id] = 1;
     
     next[0] = next[id];
     
     next[0] == 0 则需要寻找一个尚未回归原位置的数据(start - 1)与 next[0] 互换位置, 即:
     
     next[0] = next[start - 1];
     
     next[start - 1] = 0;
     
(3). 需要注意的是测试点1, 2可能超时, 当 next[0] == 0 时, 寻找下一个尚未回归原位置的数据时, 要记录位置, 

     不能一直从头开始寻找, 这样会超时. 
     
     测试点3错误可能是因为将 num[0] == 0 也计入 finish_num 中了.